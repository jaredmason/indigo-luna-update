{%- liquid
  assign counter = 0
  assign gift_counter = 0
  assign hide_title = section.settings.hide_title
  assign section_color = section.settings.color_scheme
  assign ratio = section.settings.crop | plus: 0
  assign indent_image = section.settings.indent_image
  assign description_color = section.settings.description_color_scheme
  assign description_position = section.settings.description_position
  assign product_limit = section.settings.grid | times: section.settings.rows
  assign products_per_row = section.settings.grid
  assign products_per_row_mobile = section.settings.grid_mobile | plus: 0
  assign filter_mode = section.settings.filter_mode
  assign enable_tag_combinations = section.settings.enable_tag_combinations
  assign show_sort = section.settings.enable_sorting
  assign show_filters = section.settings.enable_filtering
  assign grid_cols = 12

  if show_filters
    assign total_active_values = 0
    for filter in collection.filters
      assign total_active_values = total_active_values | plus: filter.active_values.size
    endfor
  endif

  assign show_heading_container = true
  if hide_title
    assign show_heading_container = false
  endif
  if description_position == 'under_title' and collection.description != blank
    assign show_heading_container = true
  endif
  if show_image and collection.image
    assign show_heading_container = true
  endif

  case products_per_row
    when 2
      assign desktop_col_span = 'lg:col-span-6'
    when 3
      assign desktop_col_span = 'lg:col-span-4'
    when 4
      assign desktop_col_span = 'lg:col-span-3'
    when 5
      assign grid_cols = 10
      assign desktop_col_span = 'lg:col-span-2'
  endcase

  case products_per_row_mobile
    when 1
      assign mobile_col_span = 'col-span-2'
    when 2
      assign mobile_col_span = 'col-span-1'
  endcase

  assign desktop_grid_class = 'lg:grid-cols-' | append: grid_cols
  assign text_width_desktop = 'lg:col-span-12 py-theme-half'

  if section.settings.show_image and collection.image
    case section.settings.image_size
      when 'one-third'
        assign text_width_desktop = 'lg:col-span-8 flex items-end py-theme'
        assign image_width_desktop = 'lg:col-start-9 lg:col-end-13'
      when 'one-half'
        assign text_width_desktop = 'lg:col-span-6 flex items-end py-theme'
        assign image_width_desktop = 'lg:col-start-7 lg:col-end-13'
      when 'three-fifths'
        assign text_width_desktop = 'lg:col-span-5 flex items-end py-theme'
        assign image_width_desktop = 'lg:col-start-6 lg:col-end-13'
      when 'two-thirds'
        assign text_width_desktop = 'lg:col-span-4 flex items-end py-theme'
        assign image_width_desktop = 'lg:col-start-5 lg:col-end-13'
      when 'full-width'
          assign collection_image_full_width = true
    endcase
  endif

  assign center_heading = false
  if settings.section_title_align == 'center' and collection.image == blank
    assign center_heading = true
  elsif settings.section_title_align == 'center' and collection_image_full_width
    assign center_heading = true
  endif

  assign show_marquee = false
  assign has_tag_group_blocks = false
  for block in section.blocks
    if block.type == 'marquee'
      assign show_marquee = true
      assign marquee_position = block.settings.position
      assign marquee_text_size_class = block.settings.text_size
      assign marquee_speed_number = block.settings.speed | plus: 0
      assign marquee_link = block.settings.link
      assign marquee_text = block.settings.text
      assign marquee_font = block.settings.font
      assign marquee_section_color = block.settings.color_scheme
      assign marquee_direction = block.settings.direction
      assign marquee_shopify_attributes = block.shopify_attributes
    endif
  endfor
-%}

{% assign description_length = collection.description | size %}
<script>
  function toggleTruncate(e){
    document.querySelector('.description_hidden').classList.remove('description_hidden');
    document.querySelector('.description_truncate').classList.add('description_hidden');
    e.remove();
  }
</script>
<style>
  .description_hidden {
    display: none;
  }
</style>

{%- if show_marquee and marquee_position == 'top' -%}
<section class="" {{ marquee_shopify_attributes }}>
  {% render 'marquee' with
    id: section.id
    text_size_class: marquee_text_size_class,
    speed_number: marquee_speed_number,
    link: marquee_link,
    text: marquee_text,
    font: marquee_font,
    section_color: marquee_section_color,
    direction: marquee_direction
  %}
</section>
{%- endif -%}
{% paginate collection.products by product_limit %}
  <section id="main-collection-product-grid" data-id="{{ section.id }}" class="bg-{{ section_color }}-background text-{{ section_color }}-text collection transition-opacity duration-200 ease-in-out" data-section-type="collection" data-section-id="{{ section.id }}" x-data="ThemeSection_collection()" x-init="mounted()">
    {% if settings.enable_breadcrumbs %}
      {% render 'breadcrumbs', section_color: 'header' %}
    {% endif %}
    {%- if show_heading_container -%}
    <div class="grid grid-cols-1 lg:grid-cols-12 grid-flow-row-dense gap-gutter pt-theme pb-8 border-theme-color">

      <div class="lg:col-span-6 bg-{{ section_color }}-background section-x-padding">
        <div class="mb-2 lg:mb-0">
          {% unless hide_title %}
          <h1 class="font-heading text-3xl lg:text-4xl">{{ collection.title }}</h1>
          {% endunless %}
          {% if description_position == 'under_title' and collection.description != blank %}
            {% if description_length > 200 %}<div class="rte mt-4 description_truncate">{{ collection.description | truncate: 200 }} <a href="javascript:void();" onclick="toggleTruncate(this)">Read More</a></div>{% endif %}
              <div class="rte mt-4{% if description_length > 200 %} description_hidden{% endif %}">{{ collection.description }}</div>
          {% endif %}
        </div>
      </div>

      {% if show_sort or show_filters %}
        {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
        <form id="CollectionFiltersForm" @submit.prevent="filterFormSubmit" class="lg:col-span-6 relative flex justify-end items-end section-x-padding border-grid-color">
        {% if show_filters %}
          <div class="flex">
            {% if total_active_values > 0 %}
              <a class="inline-block py-2 -mb-1 mr-6 text-sm hover:text-{{ section_color }}-accent flex items-center underline {% if settings.links_uppercase %}uppercase{% endif %}" href="{{ collection.url }}?sort_by={{ sort_by }}" @click.prevent="clearAllFilters(event)">{{ 'collections.filters.clear' | t }}</a>
            {% endif %}
            {%- for filter in collection.filters -%}
            <div class="js-filter mr-6 flex items-center justify-start relative" data-index="{{ forloop.index }}">
              <button
                type="button"
                id="filterToggle"
                x-ref="filter_{{ forloop.index }}"
                class="py-2 -mb-1 text-sm hover:text-{{ section_color }}-accent flex items-center {% if settings.links_uppercase %}uppercase{% endif %}"
                x-bind:aria-expanded="filtersOpen_{{ forloop.index }} ? true: 'false'"
                @click="filtersOpen_{{ forloop.index }} = !filtersOpen_{{ forloop.index }}"
                aria-controls="filters">
                {{ filter.label }}
                <span class="w-3 h-3 ml-1 inline-block transform origin-center rotate" :class="{'rotate-180': filtersOpen_{{ forloop.index }} }">{% render 'icon-chevron-down' %}</span>
              </button>
              <div  id="filters"
                    class="py-4 -mr-4 lg:-mr-8 z-20 bg-{{ section_color }}-background text-{{ section_color }}-text border border-secondary-accent absolute right-0 -bottom-2 transform translate-y-full"
                    x-show="filtersOpen_{{ forloop.index }}"
                    x-cloak
                    x-transition:enter="transition ease duration-200"
                    x-transition:enter-start="opacity-0"
                    x-transition:enter-end="opacity-100"
                    x-transition:leave="transition ease duration-00"
                    x-transition:leave-start="opacity-100"
                    x-transition:leave-end="opacity-0"
                    data-collection-dropdown
                    @focusout="focusOut($event, 'filtersOpen_{{ forloop.index }}')"
                    @click.away.prevent="clickAway($event, 'filtersOpen_{{ forloop.index }}')">
              {%- case filter.type -%}
                {%- when 'list' -%}
                <ul class="section-x-padding space-y-1 max-h-screen-50 overflow-y-auto">
                  {%- for filter_value in filter.values -%}
                    <li class="flex justify-end items-center"">
                      <input type="checkbox"
                        class="visually-hidden filter-checkbox custom-input"
                        name="{{ filter_value.param_name }}"
                        value="{{ filter_value.value }}"
                        @input.debounce="filterFormSubmit"
                        id="Filter-{{ filter.label }}-{{ forloop.index }}"
                        {% if filter_value.active -%}checked{%- endif %}
                        {% if filter_value.count == 0 and filter_value.active == false -%}disabled{%- endif %}
                      >
                      <label for="Filter-{{ filter.label }}-{{ forloop.index }}" class="cursor-pointer text-sm whitespace-nowrap {% if settings.links_uppercase %}uppercase{% elsif section.settings.capitalize_filters %}capitalize{% endif %} flex items-center {% if filter_value.count == 0 and filter_value.active == false -%}text-{{ section_color }}-meta line-through{%- else -%}hover:text-{{ section_color }}-accent{%- endif %}" {% if filter_value.count == 0 and filter_value.active == false -%}disabled{% endif %}>
                        {{ filter_value.label }}
                        <span class="w-2 h-2 ml-2 inline-block rounded-full border-checkbox border-current"></span>
                      </label>
                    </li>
                  {%- endfor -%}
                </ul>
                <noscript>
                  <div class="mt-4">
                    <input class="cursor-pointer px-8 py-2 {% render 'button-style', section_color: section_color %}  {% render 'button-color', section_color: section_color %}" type="submit" value="Apply">
                  </div>
                </noscript>
              {%- when 'price_range' -%}
                {% liquid
                  assign currencies_using_comma_decimals = 'ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND' | split: ','
                  assign uses_comma_decimals = false
                  if currencies_using_comma_decimals contains cart.currency.iso_code
                    assign uses_comma_decimals = true
                  endif
                %}
                <div class="mt-2 flex items-center justify-between -mx-1">
                  <div class="filter-group-display__price-range-from flex items-center justify-center mx-1">
                    <span class="pr-1">{{ cart.currency.symbol }}</span>
                    <div class="relative">
                      <input name="{{ filter.min_value.param_name }}"
                        class="font-body border-text border-current block bg-transparent p-2"
                        id="Filter-{{ filter.label }}-{{ forloop.index }}"
                        @input.debounce.1000ms="filterFormSubmit"
                        {%- if filter.min_value.value -%}
                          {%- if uses_comma_decimals -%}
                            value="{{ filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                          {%- else -%}
                            value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                          {% endif %}
                        {%- endif -%}
                        type="number"
                        placeholder="{{ 'collections.filters.from' | t }}"
                        min="0"
                        max="{{ filter.range_max | divided_by: 100 | ceil }}"
                      >
                        <label class="visually-hidden field__label" for="Filter-{{ filter.label | escape }}-GTE">{{ 'collections.filters.from' | t }}</label>
                    </div>
                  </div>
                  <div class="px-2">&ndash;</div>
                  <div class="filter-group-display__price-range-to  flex items-center justify-center mx-1">
                    <span class="pr-1">{{ cart.currency.symbol }}</span>
                    <div class="relative">
                      <input name="{{ filter.max_value.param_name }}"
                        class="font-body border-text border-current block bg-transparent p-2"
                        id="Filter-{{ filter.label }}-{{ forloop.index }}"
                        @input.debounce.1000ms="filterFormSubmit"
                        {%- if filter.max_value.value -%}
                          {%- if uses_comma_decimals -%}
                            value="{{ filter.max_value.value  | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                          {%- else -%}
                            value="{{ filter.max_value.value  | money_without_currency | replace: ',', '' }}"
                          {% endif %}
                        {%- endif -%}
                        type="number"
                        placeholder="{{ 'collections.filters.to' | t }}"
                        min="0"
                        max="{{ filter.range_max | divided_by: 100 | ceil }}"
                      >
                      <label class="visually-hidden field__label" for="Filter-{{ filter.label | escape }}-LTE">{{ 'collections.filters.to' | t }}</label>
                    </div>
                  </div>
                </div>
                <noscript>
                  <div class="mt-4">
                    <input class="cursor-pointer px-8 py-2 {% render 'button-style', section_color: section_color %}  {% render 'button-color', section_color: section_color %}" type="submit" value="Apply">
                  </div>
                </noscript>
              {%- endcase -%}
              </div>
            </div>
            {%- endfor -%}
          </div>
        {% endif %}
        {% if show_sort %}
          <div class="flex items-end">
            <button
              type="button"
              x-ref="sort"
              class="py-2 -mb-1 text-sm hover:text-{{ section_color }}-accent flex items-center {% if settings.links_uppercase %}uppercase{% endif %}"
              x-bind:aria-expanded="sortOpen? true: 'false'"
              @click="sortOpen = !sortOpen"
              aria-controls="sort">
              {{ 'collections.sorting.title' | t }}
              <span class="w-3 h-3 ml-1 inline-block transform origin-center rotate" :class="{'rotate-180': sortOpen }">{% render 'icon-chevron-down' %}</span>
            </button>
            <div  id="sort"
              class="py-4 z-20 bg-{{ section_color }}-background text-{{ section_color }}-text border border-secondary-accent absolute right-0 -bottom-2 transform translate-y-full"
              x-show="sortOpen"
              x-cloak
              x-transition:enter="transition ease duration-200"
              x-transition:enter-start="opacity-0"
              x-transition:enter-end="opacity-100"
              x-transition:leave="transition ease duration-00"
              x-transition:leave-start="opacity-100"
              x-transition:leave-end="opacity-0"
              data-collection-dropdown
              @focusout="focusOut($event, 'sortOpen')"
              @click.away.prevent="clickAway($event, 'sortOpen')">
              <div class="section-x-padding flex justify-end">
                <div class="js-filter" data-index="sort">
                  <ul class="space-y-1 max-h-screen-50 overflow-y-auto">
                    {%- for option in collection.sort_options -%}
                    {% unless option.value contains 'title-ascending' or option.value contains 'title-descending' or option.value contains 'created-ascending' or option.value contains 'manual' %}
                      <li class="flex justify-end items-center">
                        <input type="radio"
                          class="visually-hidden filter-checkbox custom-input"
                          name="sort_by"
                          value="{{ option.value | escape }}"
                          @input.debounce="filterFormSubmit"
                          id="Sort-{{ option.name }}-{{ forloop.index }}"
                          {% if option.value == sort_by -%}checked{%- endif %}
                        >
                        <label for="Sort-{{ option.name }}-{{ forloop.index }}" class="cursor-pointer text-sm uppercase flex items-center hover:text-{{ section_color }}-accent {% if filter_value.count == 0 and filter_value.active == false -%}text-{{ section_color }}-meta line-through{%- endif %}" {% if filter_value.count == 0 and filter_value.active == false -%}disabled{% endif %}>

                          {{ option.name | escape }}
                          <span class="w-2 h-2 ml-2 inline-block rounded-full border-checkbox border-current"></span>
                        </label>
                      </li>
                    {% endunless %}
                    {%- endfor -%}
                  </ul>
                </div>
              </div>
            </div>
          </div>
        {% endif %}
        </form>
      {% endif %}

    </div>
  {%- endif -%}

  {%- if show_marquee and marquee_position == 'under_title' -%}
    <aside class="border-b-grid border-grid-color" {{ marquee_shopify_attributes }}>
      {% render 'marquee' with
        id: section.id
        text_size_class: marquee_text_size_class,
        speed_number: marquee_speed_number,
        link: marquee_link,
        text: marquee_text,
        font: marquee_font,
        section_color: marquee_section_color,
        direction: marquee_direction
      %}
    </aside>
    {%- endif -%}

    {% if section.settings.linklist != blank %}
      <div class="border-b-grid border-grid-color relative">
        <div class="bg-gradient-to-r from-{{ section_color }}-background-0 via-{{ section_color }}-background to-{{ section_color }}-background w-8 absolute top-0 right-0 bottom-0 lg:hidden pointer-events-none"></div>
        <div class="section-x-padding py-2 overflow-x-auto">
          <nav role="navigation">
            <ul class="flex lg:flex-wrap {% if center_heading %}lg:justify-center{% else %}lg:justify-start{% endif %} whitespace-nowrap -mx-2 lg:-mx-4">
              {%- for link in linklists[section.settings.linklist].links -%}
              <li class="inline-block px-2 lg:px-4">
                {%- if link.active -%}
                <a class="block hover:text-{{ section_color }}-accent py-2" href="{{ link.url }}" aria-current="page"><span class="border-b-text border-current">{{ link.title }}</span></a>
                {%- else -%}
                <a class="block hover:text-{{ section_color }}-accent py-2" href="{{ link.url }}"><span class="border-b-transparent border-current">{{ link.title }}</span></a>
                {%- endif -%}
              </li>
              {%- endfor -%}
            </ul>
          </nav>
        </div>
      </div>
    {% endif %}

    <div id="CollectionProductGrid">
      {%- if collection.products.size > 0 -%}
        <ul class="collection-list grid grid-cols-2 {{ desktop_grid_class }} gap-gutter px-2px">
          {%- for product in collection.products -%}
            {% if product.type == 'Gift Card' %}
              {% unless gift_counter > 0 %}
              <li class="{{ mobile_col_span }} {{ desktop_col_span }} bg-{{ section_color }}-background text-{{ section_color }}-text">
                {%- liquid
                  assign collection = collections[section.settings.gift_cards]
                  assign ratio = 0.6667 | plus: 0
                -%}
                <a class="group h-full block relative hover:underline" href="{{ collection.url }}">
                  {%- assign image = collection.image | default: collection.products.first.featured_image -%}
                  <div class="group-hover:opacity-80 transition-opacity">
                  {% render 'image-crop' with
                    image: image,
                    ratio: ratio
                    crop: 0.6667
                  %}
                  </div>
                  <div class="relative pt-3 pb-8 section-x-padding">
                    <div class="text-primary-text text-sm lg:text-base break-words w-full">
                      {{ collection.title }}
                    </div>
                  </div>
                </a>
              </li>
              {% endunless %}
              {%- assign gift_counter = gift_counter | plus: 1 -%}
            {% else %}
              {%- assign counter = counter | plus: 1 -%}
              <li class="{{ mobile_col_span }} {{ desktop_col_span }} bg-{{ section_color }}-background text-{{ section_color }}-text">
                {%- render 'product-grid-item',
                    product: product,
                    section_color: section_color,
                    products_per_row: products_per_row,
                    products_per_row_mobile: products_per_row_mobile,
                    responsive_image_counter: forloop.index
                -%}
              </li>
  
              {%- if show_marquee and marquee_position == 'after_row' and counter == products_per_row -%}
              <li class="col-span-full" {{ marquee_shopify_attributes }}>
                <aside>
                  {% render 'marquee' with
                    id: section.id
                    text_size_class: marquee_text_size_class,
                    speed_number: marquee_speed_number,
                    link: marquee_link,
                    text: marquee_text,
                    font: marquee_font,
                    section_color: marquee_section_color,
                    direction: marquee_direction
                  %}
                </aside>
              </li>
              {%- endif -%}
  
              {% if description_position == 'after_row' and collection.description != blank and counter == products_per_row %}
                <li class="col-span-full">
                  <aside class="bg-{{ description_color }}-background text-{{ description_color }}-text section-x-padding py-theme">
                    <div class="rte">{{ collection.description }}</div>
                  </aside>
                </li>
              {% endif %}
            {% endif %}
          {%- endfor -%}
          {%- liquid
            assign items_on_last_row = counter | modulo: products_per_row
            assign col_span = grid_cols | divided_by: products_per_row
            assign placeholder_width = products_per_row | minus: items_on_last_row | times: col_span
            assign items_on_last_row_mobile = counter | modulo: products_per_row_mobile
            assign col_span_mobile = 2 | divided_by: products_per_row_mobile
            assign placeholder_width_mobile = products_per_row_mobile | minus: items_on_last_row_mobile | times: col_span_mobile
          -%}
          {%- if items_on_last_row != 0 -%}
            <li class="none absolute lg:static lg:block lg:col-span-{{ placeholder_width }} bg-{{ section_color }}-background" aria-hidden="true" role="presentation"></li>
          {%- endif -%}
          {%- if items_on_last_row_mobile != 0 -%}
            <li class="block lg:none lg:absolute col-span-{{ placeholder_width_mobile }} bg-{{ section_color }}-background" aria-hidden="true" role="presentation"></li>
          {%- endif -%}
        </ul>
      {%- else -%}
        <p class="section-x-padding py-theme">{{ 'collections.general.no_matches' | t }}.</p>
      {%- endif -%}
      {% if paginate.pages > 1 %}
        {% render 'pagination' with paginate: paginate, section_color: section_color %}
      {% endif %}
    </div>

    {% assign show_description_bottom = false %}
    {% if description_position == 'bottom' and collection.description != blank %}
      {% assign show_description_bottom = true %}
    {% elsif description_position == 'after_row' and collection.products.size < products_per_row and collection.description != blank %}
      {% assign show_description_bottom = true %}
    {% endif %}

    {% if show_description_bottom %}
      <div class="bg-{{ description_color }}-background text-{{ description_color }}-text section-x-padding py-theme border-t-grid border-grid-color">
        <div class="rte">{{ collection.description }}</div>
      </div>
    {% endif %}
  </section>
{% endpaginate %}

{%- if section.settings.override_header_footer_color_scheme -%}
  {%- render 'header-footer-color-scheme-override', section_color: section_color -%}
{%- endif -%}


{% schema %}
  {
    "name": "Collection",
    "settings": [
      {
        "type": "checkbox",
        "id": "hide_title",
        "label": "Hide title"
      },
      {
        "type": "header",
        "content": "Description"
      },
      {
        "type": "select",
        "id": "description_position",
        "label": "Description position",
        "default": "under_title",
        "options": [
          {
            "value": "under_title",
            "label": "Under title"
          },
          {
            "value": "after_row",
            "label": "After first row"
          },
          {
            "value": "bottom",
            "label": "Bottom of page"
          }
        ]
      },
      {
        "type": "select",
        "id": "description_color_scheme",
        "label": "Description color scheme",
        "options": [
            { "value": "primary", "label": "Primary"},
            { "value": "secondary", "label": "Secondary"},
            { "value": "tertiary", "label": "Tertiary"}
        ],
        "default":   "primary",
        "info": "Only applies when after first row or bottom of page"
      },
      {
        "type": "header",
        "content": "Products"
      },
      {
        "type": "range",
        "id": "grid",
        "label": "Products per row",
        "min": 2,
        "max": 5,
        "step": 1,
        "default": 3
      },
      {
        "type": "range",
        "id": "rows",
        "label": "Rows",
        "min": 2,
        "max": 40,
        "step": 2,
        "default": 20
      },
      {
        "type": "select",
        "id": "grid_mobile",
        "label": "Products per row - mobile",
        "options": [
            { "value": "1", "label": "1"},
            { "value": "2", "label": "2"}
        ],
        "default":   "1"
      },
      {
        "label": "Gift cards collection",
        "id": "gift_cards",
        "type": "collection"
      },
      {
        "type":      "header",
        "content":   "Filtering and Sorting"
      },
      {
        "type": "checkbox",
        "id": "enable_filtering",
        "label": "Enable filtering",
        "info": "[Customize filters](/admin/menus)"
      },
      {
        "type": "checkbox",
        "id": "enable_sorting",
        "label": "Enable sorting"
      },
      {
        "type": "link_list",
        "id": "linklist",
        "label": "Collection menu",
        "info": "This menu won't show dropdown items"
      },
      {
        "type": "checkbox",
        "id": "capitalize_filters",
        "label": "Capitalize labels"
      },
      {
        "type":      "header",
        "content":   "Color"
      },
      {
        "type": "select",
        "id": "color_scheme",
        "label": "Color scheme",
        "options": [
            { "value": "primary", "label": "Primary"},
            { "value": "secondary", "label": "Secondary"},
            { "value": "tertiary", "label": "Tertiary"}
        ],
        "default":   "primary"
      },
      {
        "type": "checkbox",
        "id": "override_header_footer_color_scheme",
        "label": "Use this color scheme for header and footer",
        "info": "This will only apply to the collection template",
        "default": false
      }
    ],
    "blocks": [
      {
        "type": "marquee",
        "name": "Marquee",
        "limit": 1,
        "settings": [
          {
            "type": "select",
            "id": "position",
            "label": "Position",
            "default": "top",
            "options": [
              {
                "value": "top",
                "label": "Top"
              },
              {
                "value": "under_title",
                "label": "Under title"
              },
              {
                "value": "after_row",
                "label": "After first row"
              }
            ]
          },
          {
            "type": "text",
            "id": "text",
            "label": "Text",
            "default": "Use this text to share information about your brand with your customers. Describe a product, share announcements, or welcome customers to your store."
          },
          {
            "type": "url",
            "id": "link",
            "label": "Link"
          },
          {
            "type": "select",
            "id": "text_size",
            "label": "Text size",
            "options": [
              { "value": "text-sm", "label": "S"},
              { "value": "text-base", "label": "M"},
              { "value": "text-lg", "label": "L"},
              { "value": "text-xl", "label": "XL"},
              { "value": "text-2xl", "label": "2XL"},
              { "value": "text-2xl lg:text-3xl", "label": "2XL / desktop 3XL"},
              { "value": "text-2xl lg:text-4xl", "label": "2XL / desktop 4XL"},
              { "value": "text-2xl lg:text-5xl", "label": "2XL / desktop 5XL" },
              { "value": "text-2xl lg:text-6xl", "label": "2XL / desktop 6XL" },
              { "value": "text-2xl lg:text-7xl", "label": "2XL / desktop 7XL" }
            ],
            "default":   "text-base"
          },
          {
            "type": "select",
            "id": "font",
            "label": "Font",
            "options": [
              {
                "value": "heading",
                "label": "Heading"
              },
              {
                "value": "body",
                "label": "Body"
              }
            ],
            "default": "body"
          },
          {
            "type": "range",
            "id": "speed",
            "min": 20,
            "max": 300,
            "step": 10,
            "label": "Speed",
            "default": 200
          },
          {
            "type": "select",
            "id": "direction",
            "label": "Direction",
            "options": [
                { "value": "", "label": "Right to left"},
                { "value": "reverse", "label": "Left to right"}
            ],
            "default":   ""
          },
          {
            "type":      "header",
            "content":   "Color"
          },
          {
            "type": "select",
            "id": "color_scheme",
            "label": "Color scheme",
            "options": [
                { "value": "primary", "label": "Primary"},
                { "value": "secondary", "label": "Secondary"},
                { "value": "tertiary", "label": "Tertiary"}
            ],
            "default":   "secondary"
          }
        ]
      }
    ]
  }
{% endschema %}
