{%- liquid
  assign height = section.settings.height
  assign image_focal_point = section.settings.image_focal_point
  assign content_position = section.settings.content_position
  assign content_position_desktop = section.settings.content_position_desktop
  assign content_width_desktop = section.settings.content_width_desktop
  assign text_color = section.settings.button_color
  assign button_background = section.settings.button_background
  assign image = section.settings.image
  assign image_mobile = section.settings.image_mobile
  assign indent_image = section.settings.indent_image
  assign overlay_header = section.settings.overlay_header
  assign overlay_background = section.settings.overlay_background
-%}

<section class="bg-{{ background }}-background relative overflow-hidden {% if height == 'full_screen' %}h-screen-header{% elsif height == 'full_height' %}h-full{% else %}h-auto{% endif %}">
  <div class="{% if indent_image %}px-2px py-2px{% endif %} h-full w-full">
	<div class="{% if settings.fill_image_to_border_edge == false or height == 'full_screen' or height == 'full_height'  %}relative h-full w-full{% endif %}">
	{% if image != blank %}
	  {% if image_mobile != blank %}
	  <div class="hidden lg:block">
	  {% endif %}

	  {% if height == 'full_screen' or height == 'full_height' %}
		{% render 'image-object' with
		  image: image,
		  focal_point: image_focal_point
		%}
	  {% else %}
		{% render 'responsive-image' with
		  image: image
		%}
	  {% endif %}

	  {% if image_mobile != blank %}
	  </div>
	  {% endif %}

	  {% if image_mobile != blank %}
	  <div class="lg:hidden">
		{% assign image = image_mobile %}
		{% if height == 'full_screen' or height == 'full_height' %}
		  {% render 'image-object' with
			image: image,
			focal_point: image_focal_point
		  %}
		{% else %}
		  {% render 'responsive-image' with
			image: image
		  %}
		{% endif %}
	  </div>
	  {% endif %}
	{% else %}
	  <div class="bg-placeholder-bg p-8 text-placeholder {% if height == 'full_screen' or height == 'full_height' %}absolute top-0 right-0 bottom-0 left-0{% endif %}">
		{{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder-svg w-full h-full text-text fill-current' }}
	  </div>
	{% endif %}
	</div>
  </div>

  <div class="absolute top-0 left-0 right-0 bottom-0 z-10 section-x-padding py-2 bg-overlay-custom">
	<div class="h1 flex justify-center">
	  <a href="{{ routes.root_url }}" class="inline-block logo-image break-all">
		  {%- if overlay_header -%}
		  <div class="py-1 max-h-logo lg:h-full">
			{% render 'icon-logo-overlay' %}
		  </div>
		  {% else %}
		  <div class="py-1 max-h-logo lg:h-full">
			{% render 'icon-logo-full' %}
		  </div>
		  {%- endif -%}
	  </a>
	</div>
	<div class="w-full h-full flex {{ content_position }} {{ content_position_desktop }} lg:p-8 -mt-header">
	  <div class="w-full {{ content_width_desktop }}">
	  {% for block in section.blocks %}
	  	{% assign cta_link = block.settings.link %}
		{% assign cta_text  = block.settings.text %}
		{% if cta_link != blank and cta_text != '' %}
		<div class="mt-6">
			<a href="{{ cta_link }}" class="inline-flex justify-center items-center rounded-md text-xl w-full px-8 py-1 text-custom bg-button-custom {% if section.settings.opacity %}hover:opacity-90{% endif %} transition-opacity">
			  <span class="{% if settings.button_uppercase %}uppercase{% endif %}">{{ cta_text }}</span>
			</a>
		</div>
		{% endif %}
	  {% endfor %}
	  </div>
	</div>
  </div>
</section>

<style>
.text-custom {
	color: {{ text_color }};
}
.bg-button-custom {
	background: {{ button_background }};
}
.bg-overlay-custom {
	background: {{ overlay_background }};
}
</style>

{% schema %}
{
  "name": "Links",
  "class": "has-full-screen-setting",
  "settings": [
	{
	  "id": "image",
	  "type": "image_picker",
	  "label": "Image",
	  "info": "1800 x 800px .jpg recommended"
	},
	{
	  "id": "image_mobile",
	  "type": "image_picker",
	  "label": "Image - mobile",
	  "info": "800 x 1200px .jpg recommended"
	},
	{
	  "type": "checkbox",
	  "id": "indent_image",
	  "label": "Indent image",
	  "default": false
	},
	{
	  "type": "select",
	  "id": "height",
	  "label": "Height",
	  "options": [
		{ "value": "natural", "label": "Natural"},
		{ "value": "full_screen", "label": "Full screen"}
	  ],
	  "default":   "natural"
	},
	{
	  "type": "select",
	  "id": "image_focal_point",
	  "label": "Image focal point",
	  "options": [
		  { "value": "object-left-top", "label": "Top left"},
		  { "value": "object-top", "label": "Top center"},
		  { "value": "object-right-top", "label": "Top right"},
		  { "value": "object-left", "label": "Left"},
		  { "value": "object-center", "label": "Center"},
		  { "value": "object-right", "label": "Right"},
		  { "value": "object-left-bottom", "label": "Bottom left"},
		  { "value": "object-bottom", "label": "Bottom center"},
		  { "value": "object-right-bottom", "label": "Bottom right"}
	  ],
	  "default":   "object-center",
	  "info": "Only applies when image is cropped. Keeps image subject in view."
	},
	{
	  "type": "select",
	  "id": "content_position",
	  "label": "Content position mobile",
	  "options": [
		  { "value": "justify-start items-start text-left", "label": "Top left"},
		  { "value": "justify-center items-start text-center", "label": "Top center"},
		  { "value": "justify-end items-start text-right", "label": "Top right"},
		  { "value": "justify-start items-center text-left", "label": "Left"},
		  { "value": "justify-center items-center text-center", "label": "Center"},
		  { "value": "justify-end items-center text-right", "label": "Right"},
		  { "value": "justify-start items-end text-left", "label": "Bottom left"},
		  { "value": "justify-center items-end text-center", "label": "Bottom center"},
		  { "value": "justify-end items-end text-right", "label": "Bottom right"}
	  ],
	  "default":   "justify-center items-center text-center"
	},
	{
	  "type": "select",
	  "id": "content_position_desktop",
	  "label": "Content position desktop",
	  "options": [
		  { "value": "lg:justify-start lg:items-start lg:text-left", "label": "Top left"},
		  { "value": "lg:justify-center lg:items-start lg:text-center", "label": "Top center"},
		  { "value": "lg:justify-end lg:items-start lg:text-right", "label": "Top right"},
		  { "value": "lg:justify-start lg:items-center lg:text-left", "label": "Left"},
		  { "value": "lg:justify-center lg:items-center lg:text-center", "label": "Center"},
		  { "value": "lg:justify-end lg:items-center lg:text-right", "label": "Right"},
		  { "value": "lg:justify-start lg:items-end lg:text-left", "label": "Bottom left"},
		  { "value": "lg:justify-center lg:items-end lg:text-center", "label": "Bottom center"},
		  { "value": "lg:justify-end lg:items-end lg:text-right", "label": "Bottom right"}
	  ],
	  "default":   "lg:justify-center lg:items-center lg:text-center"
	},
	{
	  "type": "select",
	  "id": "content_width_desktop",
	  "label": "Content width on desktop",
	  "default": "lg:w-2/3",
	  "options": [
		{
		  "value": "lg:w-1/3",
		  "label": "One third"
		},
		{
		  "value": "lg:w-1/2",
		  "label": "One half"
		},
		{
		  "value": "lg:w-2/3",
		  "label": "Two thirds"
		},
		{
		  "value": "lg:w-full",
		  "label": "Full width"
		}
	  ]
	},
	{
	  "type": "color",
	  "id": "button_color",
	  "label": "Button text colour",
	  "default": "#ffffff"
	},
	{
	  "type": "color_background",
	  "id": "button_background",
	  "label": "Button background colour",
	  "default": "#B1974E"
	},
	{
	  "type": "color_background",
	  "id": "overlay_background",
	  "label": "Overlay background colour"
	},
	{
	  "type": "checkbox",
	  "id": "overlay_header",
	  "label": "Use overlay logo",
	  "info": "Change header logo to white"
	},
	{
	  "type": "checkbox",
	  "id": "opacity",
	  "label": "Button hover effect",
	  "info": "Select to add transparency on hover."
	}
  ],
  "blocks": [
	{
	  "type": "link",
	  "name": "Link",
	  "limit": 12,
	  "settings": [
		{
		  "type":      "header",
		  "content":   "Call to action"
		},
		{
		  "type": "url",
		  "id": "link",
		  "label": "Link"
		},
		{
		  "type": "text",
		  "id": "text",
		  "label": "Text"
		}
	  ]
	}
  ],
  "presets": [{
	  "name": "Links",
	  "category": "Links",
	  "blocks": [
		{
		  "type": "link"
		},
		{
		  "type": "link"
		},
		{
		  "type": "link"
		}
	  ]
  }]
}
{% endschema %}
